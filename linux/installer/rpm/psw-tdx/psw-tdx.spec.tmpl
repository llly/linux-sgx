#
# Copyright (C) 2011-2022 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#

%define _tdx_qgs_path @tdx_qgs_path@
%define _ra_service_path @ra_service_path@
%define _dcap_pccs_path @dcap_pccs_path@
%define _pck_id_retrieval_tool_path @pck_id_retrieval_tool_path@
%define _psw_version @psw_version@
%define _dcap_version @dcap_version@
%define _license_file COPYING

Name:           tdx-qgs
Version:        %{_dcap_version}
Release:        1%{?dist}
Summary:        Intel(R) TD Quoting Generation Service

License:        BSD and MIT and Apache and GPL and BSD/GPLv2 dual and zlib/libpng and Eclipse Public License-v1.0 and Open Source and OpenSSL
URL:            https://github.com/intel/linux-sgx
Source0:        psw-tdx-%{version}.tar.gz

BuildRequires:  autoconf
BuildRequires:  automake
BuildRequires:  binutils
BuildRequires:  libtool
BuildRequires:  gcc
BuildRequires:  gcc-c++
BuildRequires:  make
BuildRequires:  cmake
BuildRequires:  ocaml
BuildRequires:  ocaml-ocamlbuild
BuildRequires:  redhat-rpm-config
BuildRequires:  openssl
BuildRequires:  openssl-devel
BuildRequires:  protobuf-compiler
BuildRequires:  protobuf-devel
BuildRequires:  libcurl-devel
BuildRequires:  python2
BuildRequires:  perl
BuildRequires:  nasm

%description
Intel(R) Intel(R) TD Quoting Generation Service

%package -n libsgx-ae-pce
Version:       %{_psw_version}
Summary:       Intel(R) Software Guard Extensions PCE

%description -n libsgx-ae-pce
Intel(R) Software Guard Extensions PCE

%package -n libsgx-headers
Version:       %{_psw_version}
Summary:       Intel(R) Software Guard Extensions Basic Headers

%description -n libsgx-headers
Intel(R) Software Guard Extensions Basic Headers

%package -n libsgx-urts
Version:       %{_psw_version}
Summary:       Intel(R) Software Guard Extensions uRTS
Requires:      libsgx-enclave-common >= %{version}-%{release}

%description -n libsgx-urts
Intel(R) Software Guard Extensions uRTS

%package -n libsgx-enclave-common
Version:       %{_psw_version}
Summary:       Intel(R) Software Guard Extensions Enclave Common Loader
Recommends:    libsgx-launch >= %{version}-%{release}

%description -n libsgx-enclave-common
Intel(R) Software Guard Extensions Enclave Common Loader

%package -n libsgx-enclave-common-devel
Version:       %{_psw_version}
Summary:       Intel(R) Software Guard Extensions Enclave Common Loader for Developers
Requires:      libsgx-enclave-common = %{version}-%{release} libsgx-headers >= %{version}-%{release}

%description -n libsgx-enclave-common-devel
Intel(R) Software Guard Extensions Enclave Common Loader for Developers

%package -n libsgx-ae-id-enclave
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions ID Enclave

%description -n libsgx-ae-id-enclave
Intel(R) Software Guard Extensions ID Enclave

%package -n libsgx-ae-tdqe
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions TDQE

%description -n libsgx-ae-tdqe
Intel(R) Software Guard Extensions TDQE

%package -n libsgx-ae-qve
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions QVE

%description -n libsgx-ae-qve
Intel(R) Software Guard Extensions QVE

%package -n libsgx-tdx-logic
Version:       %{_dcap_version}
Summary:       Intel(R) Trust Domain Extensions QE logic library
Requires:      libsgx-urts >= %{_psw_version}-%{release} libsgx-ae-tdqe >= %{version}-%{release} libsgx-ae-id-enclave >= %{version}-%{release} libsgx-pce-logic >= %{version}-%{release}

%description -n libsgx-tdx-logic
Intel(R) Trust Domain Extensions QE logic library

%package -n libsgx-tdx-logic-devel
Version:       %{_dcap_version}
Summary:        Intel(R) Trust Domain Extensions QE logic library For Developers
Requires:       libsgx-tdx-logic = %{version}-%{release} libsgx-headers >= %{_psw_version}-%{release}

%description -n libsgx-tdx-logic-devel
Intel(R) Trust Domain Extensions QE logic library For Developers

%package -n libsgx-pce-logic
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions PCE logic
Requires:      libsgx-urts >= %{_psw_version}-%{release} libsgx-ae-pce >= %{_psw_version}-%{release}

%description -n libsgx-pce-logic
Intel(R) Software Guard Extensions PCE logic

%package -n libsgx-dcap-default-qpl
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Default Quote Provider Library

%description -n libsgx-dcap-default-qpl
Intel(R) Software Guard Extensions Default Quote Provider Library

%package -n libsgx-dcap-default-qpl-devel
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Default Quote Provider Library for Developers
Requires:      libsgx-dcap-default-qpl = %{version}-%{release}

%description -n libsgx-dcap-default-qpl-devel
Intel(R) Software Guard Extensions Default Quote Provider Library for Developers

%package -n libtdx-attest
Version:       %{_dcap_version}
Summary:       Intel(R) Trust Domain Extensions Attestation library

%description -n libtdx-attest
Intel(R) Trust Domain Extensions Attestation library

%package -n libtdx-attest-devel
Version:       %{_dcap_version}
Summary:       Intel(R) Trust Domain Extensions Attestation library for Developers
Requires:      libtdx-attest = %{version}-%{release}

%description -n libtdx-attest-devel
Intel(R) Trust Domain Extensions Attestation library for Developers

%package -n libsgx-dcap-quote-verify
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Data Center Attestation Primitives Quote Verification Library
Recommends:    libsgx-ae-qve >= %{version}-%{release} libsgx-urts >= %{_psw_version}-%{release}

%description -n libsgx-dcap-quote-verify
Intel(R) Software Guard Extensions Data Center Attestation Primitives Quote Verification Library

%package -n libsgx-dcap-quote-verify-devel
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Data Center Attestation Primitives Quote Verification Library for Developers
Requires:      libsgx-dcap-quote-verify = %{version}-%{release} libsgx-headers >= %{_psw_version}-%{release}

%description -n libsgx-dcap-quote-verify-devel
Intel(R) Software Guard Extensions Data Center Attestation Primitives Quote Verification Library for Developers

%package -n sgx-dcap-pccs
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions PCK Caching Service
Requires:      gcc gcc-c++ make

%description -n sgx-dcap-pccs
Intel(R) Software Guard Extensions PCK Caching Service

%package -n libsgx-ra-network
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Registration Agent Network Library

%description -n libsgx-ra-network
Intel(R) Software Guard Extensions Registration Agent Network Library

%package -n libsgx-ra-network-devel
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Registration Agent Network Library for Developers
Requires:      libsgx-ra-network = %{version}-%{release}

%description -n libsgx-ra-network-devel
Intel(R) Software Guard Extensions Registration Agent Network Library for Developers

%package -n libsgx-ra-uefi
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Registration Agent UEFI Library

%description -n libsgx-ra-uefi
Intel(R) Software Guard Extensions Registration Agent UEFI Library

%package -n libsgx-ra-uefi-devel
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Registration Agent UEFI Library for Developers
Requires:      libsgx-ra-uefi = %{version}-%{release}

%description -n libsgx-ra-uefi-devel
Intel(R) Software Guard Extensions Registration Agent UEFI Library for Developers

%package -n sgx-ra-service
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions Registration Agent Service
Requires:      libsgx-ra-uefi >= %{version}-%{release} libsgx-ra-network >= %{version}-%{release}

%description -n sgx-ra-service
Intel(R) Software Guard Extensions Registration Agent Service

%package -n sgx-pck-id-retrieval-tool
Version:       %{_dcap_version}
Summary:       Intel(R) Software Guard Extensions PCK Certs Retrieve Tool
Recommends:    libsgx-urts >= %{_psw_version} libsgx-ae-pce >= %{version}-%{release} libsgx-ae-id-enclave >= %{version}-%{release} libsgx-ra-uefi >= %{version}-%{release}

%description -n sgx-pck-id-retrieval-tool
Intel(R) Software Guard Extensions:this tool is used to collect the platform information to retrieve the PCK certs from PCS(Provisioning Certification Server)

%prep
%setup -qc

%build
%undefine _auto_set_build_flags
make %{?_smp_mflags} build

%install
make DESTDIR=%{?buildroot} install

for pkg in $(ls -A %{?buildroot} 2> /dev/null |grep -v "license"); do
    install -d %{?buildroot}/${pkg}/%{_docdir}/${pkg}
    find %{?buildroot}/license -type f -print0 | \
    xargs -0 -n1 cat >> %{?buildroot}/${pkg}/%{_docdir}/${pkg}/%{_license_file}
    find %{?buildroot}/${pkg} -type d -exec \
    sh -c '(ls -p "{}"|grep />/dev/null)||echo "{}"' \; | \
    sed -e "s#^%{?buildroot}/${pkg}##" | \
    grep -v "^%{_libdir}" | \
    grep -v "^%{_includedir}" | \
    grep -v "^%{_sysconfdir}" | \
    grep -v "^%{_tdx_qgs_path}" | \
    grep -v "^%{_dcap_pccs_path}" | \
    grep -v "^%{_ra_service_path}" | \
    grep -v "^%{_pck_id_retrieval_tool_path}" | \
    sed -e "s#^#%dir #" > %{_specdir}/list-${pkg}
    for f in $(find %{?buildroot}/${pkg}); do
        if [ -d ${f} ]; then
            echo ${f} | sed -e "s#^%{?buildroot}/${pkg}##" | \
            grep -E "^%{_tdx_qgs_path}|^%{_dcap_pccs_path}|^%{_ra_service_path}|^%{_pck_id_retrieval_tool_path}" | \
            sed -e "s#^#%dir #" >> %{_specdir}/list-${pkg}
        else
            echo ${f} | \
            sed -e "s#^%{?buildroot}/${pkg}##" >> %{_specdir}/list-${pkg}
        fi
    done
    cp -r %{?buildroot}/${pkg}/* %{?buildroot}/
    rm -fr %{?buildroot}/${pkg}
    sed -i -e 's:^/etc/.*\.conf:%config &:' \
           -e 's:^%{_dcap_pccs_path}/config/default\.json:%config &:' %{_specdir}/list-${pkg}
done
rm -fr %{?buildroot}/license

%clean
make clean

%files -f %{_specdir}/list-%{name}
%files -n libsgx-ae-pce -f %{_specdir}/list-libsgx-ae-pce
%files -n libsgx-headers -f %{_specdir}/list-libsgx-headers
%files -n libsgx-urts -f %{_specdir}/list-libsgx-urts
%files -n libsgx-enclave-common -f %{_specdir}/list-libsgx-enclave-common
%files -n libsgx-enclave-common-devel -f %{_specdir}/list-libsgx-enclave-common-devel
%files -n libsgx-ae-id-enclave -f %{_specdir}/list-libsgx-ae-id-enclave
%files -n libsgx-ae-tdqe -f %{_specdir}/list-libsgx-ae-tdqe
%files -n libsgx-ae-qve -f %{_specdir}/list-libsgx-ae-qve
%files -n libsgx-tdx-logic -f %{_specdir}/list-libsgx-tdx-logic
%files -n libsgx-tdx-logic-devel -f %{_specdir}/list-libsgx-tdx-logic-devel
%files -n libsgx-pce-logic -f %{_specdir}/list-libsgx-pce-logic
%files -n libsgx-dcap-default-qpl -f %{_specdir}/list-libsgx-dcap-default-qpl
%files -n libsgx-dcap-default-qpl-devel -f %{_specdir}/list-libsgx-dcap-default-qpl-devel
%files -n libtdx-attest -f %{_specdir}/list-libtdx-attest
%files -n libtdx-attest-devel -f %{_specdir}/list-libtdx-attest-devel
%files -n libsgx-dcap-quote-verify -f %{_specdir}/list-libsgx-dcap-quote-verify
%files -n libsgx-dcap-quote-verify-devel -f %{_specdir}/list-libsgx-dcap-quote-verify-devel
%files -n sgx-dcap-pccs -f %{_specdir}/list-sgx-dcap-pccs
%files -n libsgx-ra-network -f %{_specdir}/list-libsgx-ra-network
%files -n libsgx-ra-network-devel -f %{_specdir}/list-libsgx-ra-network-devel
%files -n libsgx-ra-uefi -f %{_specdir}/list-libsgx-ra-uefi
%files -n libsgx-ra-uefi-devel -f %{_specdir}/list-libsgx-ra-uefi-devel
%files -n sgx-ra-service -f %{_specdir}/list-sgx-ra-service
%files -n sgx-pck-id-retrieval-tool -f %{_specdir}/list-sgx-pck-id-retrieval-tool

%posttrans
if [ -x %{_tdx_qgs_path}/startup.sh ]; then %{_tdx_qgs_path}/startup.sh; fi

%preun
if [ -x %{_tdx_qgs_path}/cleanup.sh ]; then %{_tdx_qgs_path}/cleanup.sh; fi

%posttrans -n sgx-dcap-pccs
if [ -x %{_dcap_pccs_path}/startup.sh ]; then %{_dcap_pccs_path}/startup.sh; fi

%preun -n sgx-dcap-pccs
if [ -x %{_dcap_pccs_path}/cleanup.sh ]; then %{_dcap_pccs_path}/cleanup.sh; fi

%posttrans -n sgx-ra-service
if [ -x %{_ra_service_path}/startup.sh ]; then %{_ra_service_path}/startup.sh; fi

%preun -n sgx-ra-service
if [ -x %{_ra_service_path}/cleanup.sh ]; then %{_ra_service_path}/cleanup.sh; fi

%post -n libsgx-enclave-common
trigger_udev() {
    if ! which udevadm &> /dev/null; then
        return 0
    fi
    udevadm control --reload || :
    udevadm trigger || :
}

trigger_udev

%post -n libsgx-ae-pce
trigger_udev() {
    if ! which udevadm &> /dev/null; then
        return 0
    fi
    udevadm control --reload || :
    udevadm trigger || :
}

# Add sgx_prv for in-kernel driver.
if [ -c /dev/sgx_provision -o -c /dev/sgx/provision ]; then
    getent group sgx_prv &> /dev/null || groupadd sgx_prv
    trigger_udev
fi

%changelog
* Mon Sep 5 2022 SGX Team
- Initial Release
